import { c as createComponent, b as createAstro, m as maybeRenderHead, e as addAttribute, a as renderTemplate, r as renderComponent, f as renderScript, d as defineScriptVars } from '../chunks/astro/server_B0cD9c7h.mjs';
import 'kleur/colors';
import { $ as $$ContactUsMiniCards } from '../chunks/ContactUsMiniCards_BSwJc-Cw.mjs';
import 'clsx';
import { $ as $$Image } from '../chunks/_astro_assets_9oR7zwhu.mjs';
import { z as HERO, W as WHYCHOOSEUS, a as OUROFFERINGS1, b as OUROFFERINGS2, g as CHATBUBBLE, h as ADSCLICK, i as AUTOMATION, j as LOGOMARK, $ as $$Layout } from '../chunks/Layout_3xoq29x_.mjs';
/* empty css                                 */
export { renderers } from '../renderers.mjs';

const $$Astro$5 = createAstro();
const $$FeatureCard = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$5, $$props, $$slots);
  Astro2.self = $$FeatureCard;
  const { title, content, page } = Astro2.props;
  return renderTemplate`${maybeRenderHead()}<div class="flex flex-col gap-5 bg-white p-10 w-full rounded-2xl h-max md:h-[60%]"> <span class="text-[#002166] text-lg md:text-3xl font-medium">${title}</span> <span class="text-md md:text-lg text-[#4C5967]">${content}</span> <a${addAttribute(page, "href")}> <button class="bg-blue-600 text-white px-4 py-2 rounded-full w-32 cursor-pointer">
Learn More
</button> </a> </div>`;
}, "C:/Users/GokulDS/Desktop/ssr/src/components/FeatureCard.astro", void 0);

const $$Astro$4 = createAstro();
const $$HeroHome = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$4, $$props, $$slots);
  Astro2.self = $$HeroHome;
  const { customStyles } = Astro2.props;
  return renderTemplate`${maybeRenderHead()}<section${addAttribute(`relative  -top-10   pt-24 ${customStyles}`, "class")}> ${renderComponent($$result, "Image", $$Image, { "src": HERO, "alt": "Hero Image", "class": "w-full h-[40rem] md:h-auto max-h-[100vh] object-cover" })} <!-- Overlay Text Container --> <div class="absolute bottom-0 left-0 w-full h-max z-10 flex flex-col justify-end items-center text-center" style="background: linear-gradient(180deg, rgba(0, 33, 102, 0) 0%, #002166 100%);"> <div class="md:wrapper pb-10 lg:pb-20"> <h1 class="text-white text-lg sm:text-lg md:text-4xl lg:text-5xl font-bold mb-4 leading-tight">
We help build AI-powered SDV organisations
</h1> <p class="text-white text-sm sm:text-sm md:text-xl max-w-4xl px-2 sm:px-6 mb-6">
Accelerating your SDV transformation by integrating AI-driven tools,
        agile processes, and cutting-edge skill set talent to build a future
        where software redefines mobility and innovation knows no bounds.
</p> <div class="talk-to-expert"> <a href="/contact-us"><button class="bg-blue-600 px-6 py-2 rounded-full text-white cursor-pointer hover:bg-blue-700 transition">
Talk To An Expert
</button></a> </div> </div> </div> </section> ${renderScript($$result, "C:/Users/GokulDS/Desktop/ssr/src/components/HeroHome.astro?astro&type=script&index=0&lang.ts")}`;
}, "C:/Users/GokulDS/Desktop/ssr/src/components/HeroHome.astro", void 0);

const $$Astro$3 = createAstro();
const $$ProfitInfo = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
  Astro2.self = $$ProfitInfo;
  const { icon, percent, title, content } = Astro2.props;
  return renderTemplate`${maybeRenderHead()}<div class="flex flex-col i gap-2 max-w-[30rem] h-full font-manrope"> <div class="flex items-center gap-4"> ${icon && renderTemplate`<img${addAttribute(icon, "src")} alt="icon">`} <span class="self-stretch justify-start text-blue-950 text-5xl font-bold font-['Manrope'] leading-[67.20px]">${percent}</span> </div> <div class="mb-4 h-[2.5rem]"> <span class="text-md lg:text-xl text-blue-600">${title}</span> </div> <div> <span class="text-md lg:text-xl text-[#4C5967]">${content}</span> </div> </div>`;
}, "C:/Users/GokulDS/Desktop/ssr/src/components/ProfitInfo.astro", void 0);

const $$Astro$2 = createAstro();
const $$PromiseCard = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
  Astro2.self = $$PromiseCard;
  const { title, content1, content2, content3 } = Astro2.props;
  return renderTemplate`${maybeRenderHead()}<div class="flex flex-col gap-5 bg-[#ebf2ff] p-10 w-full rounded-2xl h-max md:h-[40%]"> <span class="text-[#002166] text-lg md:text-3xl font-medium">${title}</span> <div class="flex flex-col gap-4"> <span class="text-md md:text-lg text-[#4C5967]">${content1}</span> <span class="text-md md:text-lg text-[#4C5967]">${content2}</span> <span class="text-md md:text-lg text-[#4C5967]">${content3}</span> </div> </div>`;
}, "C:/Users/GokulDS/Desktop/ssr/src/components/PromiseCard.astro", void 0);

const $$TransformationMeans = createComponent(async ($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section class="px-4 sm:px-8 md:px-16 lg:px-44 xl:px-56 bg-[#f6f9ff] py-12 h-full mb-24"> <!-- Begin Sticky Scroll Section --> <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 relative"> <!-- Left Sticky Image --> <div class="relative h-full"> <div class="sticky top-[9rem]"> <div class="flex flex-col gap-4"> <span class="text-blue-600 text-base sm:text-lg font-semibold">The Benefits</span> <h2 class="text-[#002166] text-2xl sm:text-3xl md:text-4xl font-semibold">
What SDV Transformation Means for You
</h2> </div> </div> </div> <!-- Right Content --> <div id="accordion" class="flex flex-col gap-8"> <!-- Item 1 --> <button class="w-full text-left cursor-pointer" data-accordion-id="1"> <div class="flex justify-between items-center"> <div class="flex items-center gap-4"> <span class="accordion-number text-2xl sm:text-3xl font-bold text-[#002166]">1</span> <span class="accordion-title font-semibold text-base sm:text-lg text-[#002166]">Stay Ahead of the Competition</span> </div> <span id="icon-1" class="text-xl sm:text-2xl font-bold transition-transform duration-300 text-[#002166]">-</span> </div> <div id="content-1" class="mt-2 text-gray-600 overflow-hidden transition-all duration-500 ease-in-out max-h-[1000px] opacity-100">
By diving into SDVs, you'll be able to innovate faster, roll out
          updates regularly, and offer top-notch digital experiences. This keeps
          you ahead of the curve, ensuring that your brand stays relevant in a
          rapidly changing world.
</div> </button> <!-- Item 2 --> <button class="w-full text-left cursor-pointer" data-accordion-id="2"> <div class="flex justify-between items-center"> <div class="flex items-center gap-4"> <span class="accordion-number text-2xl sm:text-3xl font-bold text-gray-400">2</span> <span class="accordion-title font-semibold text-base sm:text-lg text-gray-400">Get to Market Faster</span> </div> <span id="icon-2" class="text-xl sm:text-2xl font-bold transition-transform duration-300 text-gray-400">+</span> </div> <div id="content-2" class="mt-2 text-gray-600 overflow-hidden transition-all duration-500 ease-in-out max-h-0 opacity-0">
Speed up development cycles by leveraging SDV platforms that
          streamline the update and deployment process.
</div> </button> <!-- Item 3 --> <button class="w-full text-left cursor-pointer" data-accordion-id="3"> <div class="flex justify-between items-center"> <div class="flex items-center gap-4"> <span class="accordion-number text-2xl sm:text-3xl font-bold text-gray-400">3</span> <span class="accordion-title font-semibold text-base sm:text-lg text-gray-400">Unlock New Revenue Opportunities</span> </div> <span id="icon-3" class="text-xl sm:text-2xl font-bold transition-transform duration-300 text-gray-400">+</span> </div> <div id="content-3" class="mt-2 text-gray-600 overflow-hidden transition-all duration-500 ease-in-out max-h-0 opacity-0">
Monetize features through subscriptions, upgrades, and tailored
          services enabled by software-defined vehicles.
</div> </button> <!-- Item 4 --> <button class="w-full text-left cursor-pointer" data-accordion-id="4"> <div class="flex justify-between items-center"> <div class="flex items-center gap-4"> <span class="accordion-number text-2xl sm:text-3xl font-bold text-gray-400">4</span> <span class="accordion-title font-semibold text-base sm:text-lg text-gray-400">Delight Your Customers</span> </div> <span id="icon-4" class="text-xl sm:text-2xl font-bold transition-transform duration-300 text-gray-400">+</span> </div> <div id="content-4" class="mt-2 text-gray-600 overflow-hidden transition-all duration-500 ease-in-out max-h-0 opacity-0">
Deliver seamless, personalized, and up-to-date experiences that exceed
          customer expectations.
</div> </button> <!-- Item 5 --> <button class="w-full text-left cursor-pointer" data-accordion-id="5"> <div class="flex justify-between items-center"> <div class="flex items-center gap-4"> <span class="accordion-number text-2xl sm:text-3xl font-bold text-gray-400">5</span> <span class="accordion-title font-semibold text-base sm:text-lg text-gray-400">Future-Proof Your Business</span> </div> <span id="icon-5" class="text-xl sm:text-2xl font-bold transition-transform duration-300 text-gray-400">+</span> </div> <div id="content-5" class="mt-2 text-gray-600 overflow-hidden transition-all duration-500 ease-in-out max-h-0 opacity-0">
Adapt to changing technologies and market demands with a flexible
          software-driven foundation.
</div> </button> <!-- Item 6 --> <button class="w-full text-left cursor-pointer" data-accordion-id="6"> <div class="flex justify-between items-center"> <div class="flex items-center gap-4"> <span class="accordion-number text-2xl sm:text-3xl font-bold text-gray-400">6</span> <span class="accordion-title font-semibold text-base sm:text-lg text-gray-400">Attract and Keep Great Talent</span> </div> <span id="icon-6" class="text-xl sm:text-2xl font-bold transition-transform duration-300 text-gray-400">+</span> </div> <div id="content-6" class="mt-2 text-gray-600 overflow-hidden transition-all duration-500 ease-in-out max-h-0 opacity-0">
Create a cutting-edge work environment that appeals to top tech and
          engineering talent.
</div> </button> <hr class="hidden border-2 rotate-90 border-[#fff5dd] w-[60rem]"> </div> </div> ${renderScript($$result, "C:/Users/GokulDS/Desktop/ssr/src/components/TransformationMeans.astro?astro&type=script&index=0&lang.ts")} </section>`;
}, "C:/Users/GokulDS/Desktop/ssr/src/components/TransformationMeans.astro", void 0);

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro$1 = createAstro();
const $$WhyChooseUs = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$WhyChooseUs;
  const whyChooseUsData = [
    {
      title: "Experience Experts",
      content: "With decades of consulting experience, we understand the complexities of your SDV transformation. We craft tailored strategies to help you overcome these challenges with precision, ensuring you stay on track every step of the way."
    },
    {
      title: "Proven Approaches",
      content: "With decades of consulting experience, we understand the complexities of your SDV transformation. We craft tailored strategies to help you overcome these challenges with precision, ensuring you stay on track every step of the way."
    },
    {
      title: "Flexible Implementation",
      content: "With decades of consulting experience, we understand the complexities of your SDV transformation. We craft tailored strategies to help you overcome these challenges with precision, ensuring you stay on track every step of the way."
    },
    {
      title: "Building Internal Strength",
      content: "With decades of consulting experience, we understand the complexities of your SDV transformation. We craft tailored strategies to help you overcome these challenges with precision, ensuring you stay on track every step of the way."
    }
  ];
  const uniqueId = `why-choose-us-${Math.random().toString(36).substr(2, 9)}`;
  return renderTemplate(_a || (_a = __template(["", '<section class="px-4 sm:px-8 md:px-16 lg:px-44 xl:px-56 py-16 md:py-24 space-y-16 bg-[#FFFAED]"', '> <!-- Title Section --> <div class="flex flex-col items-center gap-4 text-center"> <span class="text-[#633a00] text-base sm:text-lg md:text-xl font-semibold">\nWhy Choose Us\n</span> <h2 class="text-[#633a00] text-2xl sm:text-4xl md:text-5xl font-bold max-w-3xl sm:max-w-4xl lg:max-w-5xl">\nCreamCollar Shapes Your SDV Journey with Innovation and Agility\n</h2> </div> <!-- Content Section --> <div class="flex flex-col lg:flex-row gap-12 items-center"> <!-- Text + Bars --> <div class="w-full lg:w-1/2 space-y-8"', '> <div class="flex flex-col gap-4"', "> ", ' </div> </div> <!-- Image --> <div class="w-full lg:w-1/2"> ', " </div> </div> </section> <script>(function(){", "\n(function() {\n  const SECTION_ID = uniqueId;\n  let animationInstance = null;\n\n  class WhyChooseUsAnimation {\n    constructor(sectionId) {\n      this.sectionId = sectionId;\n      this.current = 0;\n      this.isAnimating = false;\n      this.sections = [];\n      this.interval = null;\n      this.isActive = false;\n      this.isPaused = false;\n      this.hoverContainer = null;\n      this.startTime = 0;\n      this.pausedProgress = 0;\n      this.animationDuration = 7000;\n    }\n\n    init() {\n      this.cleanup();\n      this.findSections();\n      \n      if (this.sections.length > 0) {\n        this.setupSections();\n        this.setupEventListeners();\n        this.startAnimation();\n        this.isActive = true;\n      }\n    }\n\n    findSections() {\n      const container = document.querySelector(`[data-animation-section=\"${this.sectionId}\"]`);\n      if (container) {\n        this.sections = Array.from(container.querySelectorAll('.section'));\n        this.hoverContainer = container.querySelector(`[data-hover-container=\"${this.sectionId}\"]`);\n      }\n    }\n\n    setupEventListeners() {\n      // Hover events for pause/resume\n      if (this.hoverContainer) {\n        this.hoverContainer.addEventListener('mouseenter', this.handleMouseEnter.bind(this));\n        this.hoverContainer.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n      }\n\n      // Click events for manual navigation\n      this.sections.forEach((section, index) => {\n        section.addEventListener('click', this.handleSectionClick.bind(this, index));\n      });\n    }\n\n    handleMouseEnter() {\n      this.pauseAnimation();\n    }\n\n    handleMouseLeave() {\n      this.resumeAnimation();\n    }\n\n    handleSectionClick(index) {\n      this.goToSection(index);\n    }\n\n    setupSections() {\n      this.sections.forEach((sec) => {\n        const title = sec.querySelector('[data-title]');\n        const barBg = sec.querySelector('[data-bar-bg]');\n        const desc = sec.querySelector('[data-description]');\n        const progress = sec.querySelector('[data-progress]');\n        \n        if (title && barBg) {\n          barBg.style.height = `${title.offsetHeight}px`;\n        }\n        \n        if (desc) {\n          desc.classList.add('opacity-0', 'max-h-0');\n          desc.classList.remove('opacity-100', 'max-h-[300px]');\n        }\n        \n        if (progress) {\n          progress.style.height = '0px';\n          \n        }\n        \n        sec.classList.add('opacity-50');\n      });\n\n      if (this.sections[0]) {\n        this.expandSection(this.sections[0]);\n      }\n    }\n\n    startAnimation() {\n      this.stopAnimation();\n      this.startTime = Date.now();\n      this.pausedProgress = 0;\n      \n      this.interval = setInterval(() => {\n        if (this.isAnimating || this.sections.length === 0) return;\n        \n        if (!this.isPaused) {\n          const elapsed = Date.now() - this.startTime + this.pausedProgress;\n          \n          if (elapsed >= this.animationDuration) {\n            this.advanceToNext();\n          }\n        }\n      }, 50);\n    }\n\n    advanceToNext() {\n      if (this.isAnimating) return;\n      \n      this.isAnimating = true;\n      const next = (this.current + 1) % this.sections.length;\n      \n      this.collapseSection(this.sections[this.current])\n        .then(() => this.expandSection(this.sections[next]))\n        .then(() => {\n          this.current = next;\n          this.isAnimating = false;\n          this.resetTimer();\n        })\n        .catch(() => {\n          this.isAnimating = false;\n          this.resetTimer();\n        });\n    }\n\n    resetTimer() {\n      this.startTime = Date.now();\n      this.pausedProgress = 0;\n    }\n\n    pauseAnimation() {\n      if (this.isPaused) return;\n      \n      this.isPaused = true;\n      this.pausedProgress += Date.now() - this.startTime;\n      \n      // Pause the progress bar animation\n      const currentSection = this.sections[this.current];\n      if (currentSection) {\n        const progress = currentSection.querySelector('[data-progress]');\n        if (progress) {\n          const computedStyle = window.getComputedStyle(progress);\n          const currentHeight = computedStyle.height;\n          progress.style.transition = 'none';\n          progress.style.height = currentHeight;\n        }\n      }\n    }\n\n    resumeAnimation() {\n      if (!this.isPaused) return;\n      \n      this.isPaused = false;\n      this.startTime = Date.now();\n      \n      // Resume the progress bar animation\n      const currentSection = this.sections[this.current];\n      if (currentSection) {\n        const progress = currentSection.querySelector('[data-progress]');\n        const barBg = currentSection.querySelector('[data-bar-bg]');\n        \n        if (progress && barBg) {\n          const totalHeight = parseInt(barBg.style.height);\n          const remainingTime = this.animationDuration - this.pausedProgress;\n          \n          if (remainingTime > 0) {\n            progress.style.transition = `height ${remainingTime}ms linear`;\n            progress.style.height = `${totalHeight}px`;\n          }\n        }\n      }\n    }\n\n    goToSection(index) {\n      if (this.isAnimating || index === this.current || index >= this.sections.length) return;\n      \n      this.isAnimating = true;\n      this.isPaused = false; // Ensure we're not paused after click\n      \n      this.collapseSection(this.sections[this.current])\n        .then(() => this.expandSection(this.sections[index]))\n        .then(() => {\n          this.current = index;\n          this.isAnimating = false;\n          this.resetTimer();\n        })\n        .catch(() => {\n          this.isAnimating = false;\n          this.resetTimer();\n        });\n    }\n\n    stopAnimation() {\n      if (this.interval) {\n        clearInterval(this.interval);\n        this.interval = null;\n      }\n    }\n\n    cleanup() {\n      this.stopAnimation();\n      this.isActive = false;\n      this.isPaused = false;\n      \n      // Remove event listeners\n      if (this.hoverContainer) {\n        this.hoverContainer.removeEventListener('mouseenter', this.handleMouseEnter.bind(this));\n        this.hoverContainer.removeEventListener('mouseleave', this.handleMouseLeave.bind(this));\n      }\n      \n      this.sections.forEach((section, index) => {\n        section.removeEventListener('click', this.handleSectionClick.bind(this, index));\n      });\n    }\n\n    expandSection(section) {\n      return new Promise((resolve) => {\n        if (!section) {\n          resolve();\n          return;\n        }\n\n        const title = section.querySelector('[data-title]');\n        const desc = section.querySelector('[data-description]');\n        const progress = section.querySelector('[data-progress]');\n        const barBg = section.querySelector('[data-bar-bg]');\n\n        if (!title || !desc || !progress || !barBg) {\n          resolve();\n          return;\n        }\n\n        const titleHeight = title.offsetHeight;\n        const descHeight = desc.scrollHeight;\n        const totalHeight = titleHeight + descHeight;\n\n        section.classList.remove('opacity-50');\n\n        barBg.style.transition = 'height 0.3s ease-in-out';\n        barBg.style.height = `${totalHeight}px`;\n\n        desc.classList.remove('opacity-0', 'max-h-0');\n        desc.classList.add('opacity-100', 'max-h-[300px]');\n\n        progress.style.transition = 'none';\n        progress.style.height = '0px';\n        void progress.offsetHeight;\n\n        progress.style.transition = 'height 7s linear';\n        progress.style.height = `${totalHeight}px`;\n\n        setTimeout(resolve, 300);\n      });\n    }\n\n    collapseSection(section) {\n      return new Promise((resolve) => {\n        if (!section) {\n          resolve();\n          return;\n        }\n\n        const title = section.querySelector('[data-title]');\n        const desc = section.querySelector('[data-description]');\n        const progress = section.querySelector('[data-progress]');\n        const barBg = section.querySelector('[data-bar-bg]');\n\n        if (!title || !desc || !progress || !barBg) {\n          resolve();\n          return;\n        }\n\n        const titleHeight = title.offsetHeight;\n\n        desc.classList.remove('opacity-100', 'max-h-[300px]');\n        desc.classList.add('opacity-0', 'max-h-0');\n\n        progress.style.transition = 'height 0.7s ease-in-out';\n        progress.style.height = `${titleHeight}px`;\n\n        barBg.style.transition = 'height 0.7s ease-in-out';\n        barBg.style.height = `${titleHeight}px`;\n\n        setTimeout(() => {\n          section.classList.add('opacity-50');\n          resolve();\n        }, 700);\n      });\n    }\n  }\n\n  function initializeAnimation() {\n    if (animationInstance) {\n      animationInstance.cleanup();\n    }\n    \n    animationInstance = new WhyChooseUsAnimation(SECTION_ID);\n    \n    // Use setTimeout to ensure DOM is ready\n    setTimeout(() => {\n      animationInstance.init();\n    }, 100);\n  }\n\n  function cleanupAnimation() {\n    if (animationInstance) {\n      animationInstance.cleanup();\n      animationInstance = null;\n    }\n  }\n\n  // Event listeners for different scenarios\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeAnimation);\n  } else {\n    initializeAnimation();\n  }\n\n  // Astro navigation events\n  document.addEventListener('astro:page-load', initializeAnimation);\n  document.addEventListener('astro:after-swap', initializeAnimation);\n  document.addEventListener('astro:before-preparation', cleanupAnimation);\n\n  // Regular navigation cleanup\n  window.addEventListener('beforeunload', cleanupAnimation);\n\n  // Store cleanup function globally for manual cleanup if needed\n  window[`cleanup_${SECTION_ID}`] = cleanupAnimation;\n})();\n})();<\/script>"], ["", '<section class="px-4 sm:px-8 md:px-16 lg:px-44 xl:px-56 py-16 md:py-24 space-y-16 bg-[#FFFAED]"', '> <!-- Title Section --> <div class="flex flex-col items-center gap-4 text-center"> <span class="text-[#633a00] text-base sm:text-lg md:text-xl font-semibold">\nWhy Choose Us\n</span> <h2 class="text-[#633a00] text-2xl sm:text-4xl md:text-5xl font-bold max-w-3xl sm:max-w-4xl lg:max-w-5xl">\nCreamCollar Shapes Your SDV Journey with Innovation and Agility\n</h2> </div> <!-- Content Section --> <div class="flex flex-col lg:flex-row gap-12 items-center"> <!-- Text + Bars --> <div class="w-full lg:w-1/2 space-y-8"', '> <div class="flex flex-col gap-4"', "> ", ' </div> </div> <!-- Image --> <div class="w-full lg:w-1/2"> ', " </div> </div> </section> <script>(function(){", "\n(function() {\n  const SECTION_ID = uniqueId;\n  let animationInstance = null;\n\n  class WhyChooseUsAnimation {\n    constructor(sectionId) {\n      this.sectionId = sectionId;\n      this.current = 0;\n      this.isAnimating = false;\n      this.sections = [];\n      this.interval = null;\n      this.isActive = false;\n      this.isPaused = false;\n      this.hoverContainer = null;\n      this.startTime = 0;\n      this.pausedProgress = 0;\n      this.animationDuration = 7000;\n    }\n\n    init() {\n      this.cleanup();\n      this.findSections();\n      \n      if (this.sections.length > 0) {\n        this.setupSections();\n        this.setupEventListeners();\n        this.startAnimation();\n        this.isActive = true;\n      }\n    }\n\n    findSections() {\n      const container = document.querySelector(\\`[data-animation-section=\"\\${this.sectionId}\"]\\`);\n      if (container) {\n        this.sections = Array.from(container.querySelectorAll('.section'));\n        this.hoverContainer = container.querySelector(\\`[data-hover-container=\"\\${this.sectionId}\"]\\`);\n      }\n    }\n\n    setupEventListeners() {\n      // Hover events for pause/resume\n      if (this.hoverContainer) {\n        this.hoverContainer.addEventListener('mouseenter', this.handleMouseEnter.bind(this));\n        this.hoverContainer.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n      }\n\n      // Click events for manual navigation\n      this.sections.forEach((section, index) => {\n        section.addEventListener('click', this.handleSectionClick.bind(this, index));\n      });\n    }\n\n    handleMouseEnter() {\n      this.pauseAnimation();\n    }\n\n    handleMouseLeave() {\n      this.resumeAnimation();\n    }\n\n    handleSectionClick(index) {\n      this.goToSection(index);\n    }\n\n    setupSections() {\n      this.sections.forEach((sec) => {\n        const title = sec.querySelector('[data-title]');\n        const barBg = sec.querySelector('[data-bar-bg]');\n        const desc = sec.querySelector('[data-description]');\n        const progress = sec.querySelector('[data-progress]');\n        \n        if (title && barBg) {\n          barBg.style.height = \\`\\${title.offsetHeight}px\\`;\n        }\n        \n        if (desc) {\n          desc.classList.add('opacity-0', 'max-h-0');\n          desc.classList.remove('opacity-100', 'max-h-[300px]');\n        }\n        \n        if (progress) {\n          progress.style.height = '0px';\n          \n        }\n        \n        sec.classList.add('opacity-50');\n      });\n\n      if (this.sections[0]) {\n        this.expandSection(this.sections[0]);\n      }\n    }\n\n    startAnimation() {\n      this.stopAnimation();\n      this.startTime = Date.now();\n      this.pausedProgress = 0;\n      \n      this.interval = setInterval(() => {\n        if (this.isAnimating || this.sections.length === 0) return;\n        \n        if (!this.isPaused) {\n          const elapsed = Date.now() - this.startTime + this.pausedProgress;\n          \n          if (elapsed >= this.animationDuration) {\n            this.advanceToNext();\n          }\n        }\n      }, 50);\n    }\n\n    advanceToNext() {\n      if (this.isAnimating) return;\n      \n      this.isAnimating = true;\n      const next = (this.current + 1) % this.sections.length;\n      \n      this.collapseSection(this.sections[this.current])\n        .then(() => this.expandSection(this.sections[next]))\n        .then(() => {\n          this.current = next;\n          this.isAnimating = false;\n          this.resetTimer();\n        })\n        .catch(() => {\n          this.isAnimating = false;\n          this.resetTimer();\n        });\n    }\n\n    resetTimer() {\n      this.startTime = Date.now();\n      this.pausedProgress = 0;\n    }\n\n    pauseAnimation() {\n      if (this.isPaused) return;\n      \n      this.isPaused = true;\n      this.pausedProgress += Date.now() - this.startTime;\n      \n      // Pause the progress bar animation\n      const currentSection = this.sections[this.current];\n      if (currentSection) {\n        const progress = currentSection.querySelector('[data-progress]');\n        if (progress) {\n          const computedStyle = window.getComputedStyle(progress);\n          const currentHeight = computedStyle.height;\n          progress.style.transition = 'none';\n          progress.style.height = currentHeight;\n        }\n      }\n    }\n\n    resumeAnimation() {\n      if (!this.isPaused) return;\n      \n      this.isPaused = false;\n      this.startTime = Date.now();\n      \n      // Resume the progress bar animation\n      const currentSection = this.sections[this.current];\n      if (currentSection) {\n        const progress = currentSection.querySelector('[data-progress]');\n        const barBg = currentSection.querySelector('[data-bar-bg]');\n        \n        if (progress && barBg) {\n          const totalHeight = parseInt(barBg.style.height);\n          const remainingTime = this.animationDuration - this.pausedProgress;\n          \n          if (remainingTime > 0) {\n            progress.style.transition = \\`height \\${remainingTime}ms linear\\`;\n            progress.style.height = \\`\\${totalHeight}px\\`;\n          }\n        }\n      }\n    }\n\n    goToSection(index) {\n      if (this.isAnimating || index === this.current || index >= this.sections.length) return;\n      \n      this.isAnimating = true;\n      this.isPaused = false; // Ensure we're not paused after click\n      \n      this.collapseSection(this.sections[this.current])\n        .then(() => this.expandSection(this.sections[index]))\n        .then(() => {\n          this.current = index;\n          this.isAnimating = false;\n          this.resetTimer();\n        })\n        .catch(() => {\n          this.isAnimating = false;\n          this.resetTimer();\n        });\n    }\n\n    stopAnimation() {\n      if (this.interval) {\n        clearInterval(this.interval);\n        this.interval = null;\n      }\n    }\n\n    cleanup() {\n      this.stopAnimation();\n      this.isActive = false;\n      this.isPaused = false;\n      \n      // Remove event listeners\n      if (this.hoverContainer) {\n        this.hoverContainer.removeEventListener('mouseenter', this.handleMouseEnter.bind(this));\n        this.hoverContainer.removeEventListener('mouseleave', this.handleMouseLeave.bind(this));\n      }\n      \n      this.sections.forEach((section, index) => {\n        section.removeEventListener('click', this.handleSectionClick.bind(this, index));\n      });\n    }\n\n    expandSection(section) {\n      return new Promise((resolve) => {\n        if (!section) {\n          resolve();\n          return;\n        }\n\n        const title = section.querySelector('[data-title]');\n        const desc = section.querySelector('[data-description]');\n        const progress = section.querySelector('[data-progress]');\n        const barBg = section.querySelector('[data-bar-bg]');\n\n        if (!title || !desc || !progress || !barBg) {\n          resolve();\n          return;\n        }\n\n        const titleHeight = title.offsetHeight;\n        const descHeight = desc.scrollHeight;\n        const totalHeight = titleHeight + descHeight;\n\n        section.classList.remove('opacity-50');\n\n        barBg.style.transition = 'height 0.3s ease-in-out';\n        barBg.style.height = \\`\\${totalHeight}px\\`;\n\n        desc.classList.remove('opacity-0', 'max-h-0');\n        desc.classList.add('opacity-100', 'max-h-[300px]');\n\n        progress.style.transition = 'none';\n        progress.style.height = '0px';\n        void progress.offsetHeight;\n\n        progress.style.transition = 'height 7s linear';\n        progress.style.height = \\`\\${totalHeight}px\\`;\n\n        setTimeout(resolve, 300);\n      });\n    }\n\n    collapseSection(section) {\n      return new Promise((resolve) => {\n        if (!section) {\n          resolve();\n          return;\n        }\n\n        const title = section.querySelector('[data-title]');\n        const desc = section.querySelector('[data-description]');\n        const progress = section.querySelector('[data-progress]');\n        const barBg = section.querySelector('[data-bar-bg]');\n\n        if (!title || !desc || !progress || !barBg) {\n          resolve();\n          return;\n        }\n\n        const titleHeight = title.offsetHeight;\n\n        desc.classList.remove('opacity-100', 'max-h-[300px]');\n        desc.classList.add('opacity-0', 'max-h-0');\n\n        progress.style.transition = 'height 0.7s ease-in-out';\n        progress.style.height = \\`\\${titleHeight}px\\`;\n\n        barBg.style.transition = 'height 0.7s ease-in-out';\n        barBg.style.height = \\`\\${titleHeight}px\\`;\n\n        setTimeout(() => {\n          section.classList.add('opacity-50');\n          resolve();\n        }, 700);\n      });\n    }\n  }\n\n  function initializeAnimation() {\n    if (animationInstance) {\n      animationInstance.cleanup();\n    }\n    \n    animationInstance = new WhyChooseUsAnimation(SECTION_ID);\n    \n    // Use setTimeout to ensure DOM is ready\n    setTimeout(() => {\n      animationInstance.init();\n    }, 100);\n  }\n\n  function cleanupAnimation() {\n    if (animationInstance) {\n      animationInstance.cleanup();\n      animationInstance = null;\n    }\n  }\n\n  // Event listeners for different scenarios\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeAnimation);\n  } else {\n    initializeAnimation();\n  }\n\n  // Astro navigation events\n  document.addEventListener('astro:page-load', initializeAnimation);\n  document.addEventListener('astro:after-swap', initializeAnimation);\n  document.addEventListener('astro:before-preparation', cleanupAnimation);\n\n  // Regular navigation cleanup\n  window.addEventListener('beforeunload', cleanupAnimation);\n\n  // Store cleanup function globally for manual cleanup if needed\n  window[\\`cleanup_\\${SECTION_ID}\\`] = cleanupAnimation;\n})();\n})();<\/script>"])), maybeRenderHead(), addAttribute(uniqueId, "data-animation-section"), addAttribute(uniqueId, "data-hover-container"), addAttribute(uniqueId, "data-sections-container"), whyChooseUsData.map((item, index) => renderTemplate`<div class="section flex items-start gap-4 opacity-50 transition-opacity duration-500 cursor-pointer"${addAttribute(index, "data-section")}${addAttribute(index, "data-clickable-section")}> <!-- Progress Bar --> <div class="relative w-1 flex-shrink-0 h-auto" data-bar> <div class="bg-[#e5cda8] rounded-full w-full" data-bar-bg></div> <div class="bg-[#633a00] rounded-full w-full absolute left-0 top-0" data-progress></div> </div> <!-- Text --> <div> <h3 class="font-bold text-[#633a00] text-lg sm:text-xl md:text-2xl" data-title> ${item.title} </h3> <p class="text-[#502d16] text-base sm:text-lg max-h-0 opacity-0 overflow-hidden transition-all duration-700 ease-in-out" data-description> ${item.content} </p> </div> </div>`), renderComponent($$result, "Image", $$Image, { "src": WHYCHOOSEUS, "alt": "Why Choose Us", "class": "w-full h-full rounded-2xl object-cover" }), defineScriptVars({ uniqueId }));
}, "C:/Users/GokulDS/Desktop/ssr/src/components/WhyChooseUs.astro", void 0);

const $$Welcome = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${renderComponent($$result, "Hero", $$HeroHome, {})} ${maybeRenderHead()}<main> <section class="px-4 sm:px-8 md:px-16 lg:px-44 xl:px-56 bg-white mb-24"> <div class="flex flex-col gap-16 md:gap-20 mb-6"> <!-- Profit Info Cards --> <div class="flex flex-col lg:flex-row items-center justify-between gap-8 w-full mb-6 h-[20rem]"> ${renderComponent($$result, "ProfitInfo", $$ProfitInfo, { "percent": "$3.8b", "title": "Tesla revenue from subscription services", "content": "Tesla and Chinese OEMs have shown that SDVs drive rapid innovation, real-time updates, and continuous improvement. Legacy OEMs must now adopt a software-first approach to stay competitive.\u200B" })} ${renderComponent($$result, "ProfitInfo", $$ProfitInfo, { "percent": "$10b to $75b", "title": "in annual revenue by 2030 could come from Tesla's subscription services", "content": "Success now depends on embracing agile development, reducing costs, and tapping into new revenue streams like subscriptions, feature-on-demand, and data-driven services.\xA0" })} </div> <!-- Section Text --> <div class="flex flex-col max-w-4xl gap-3 md:gap-4"> <span class="text-md sm:text-md md:text-lg text-blue-600">What we offer</span> <span class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-[#002166] leading-snug">
We help you <span class="text-blue-600">lead this shift</span>—combining AI tools, transformation strategies, and deep SDV
          expertise to
<span class="text-blue-600">unlock</span> long-term <span>value</span>
and
<span class="text-blue-600">growth</span>.
</span> </div> </div> </section> <section class="px-4 sm:px-8 md:px-16 lg:px-44 xl:px-56 bg-[#f6f9ff] py-16 md:py-24 lg:py-32 space-y-16"> <!-- Section Title --> <div class="text-center mb-8"> <span class="text-blue-600 font-medium block text-sm sm:text-">Our Offerings</span> <h2 class="text-[#002166] text-3xl sm:text-4xl md:text-5xl font-bold mt-2">
A holistic solution for your SDV needs
</h2> </div> <!-- First Feature Section --> <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-stretch"> <!-- Mobile: Image first, Desktop: Content first --> <div class="w-full h-full order-1 lg:order-2"> ${renderComponent($$result, "Image", $$Image, { "src": OUROFFERINGS1, "alt": "Learning Experience", "class": "rounded-2xl w-full h-full object-cover min-h-[300px] lg:min-h-[500px]" })} </div> <div class="flex flex-col justify-between gap-8 order-2 lg:order-1"> ${renderComponent($$result, "FeatureCard", $$FeatureCard, { "title": "Capability Consulting", "content": "We help you build the right teams, restructure for success, and accelerate your journey forward. With our expertise, we'll guide you through product and security compliance, as well as supplier engagement and partnerships, ensuring a smooth and efficient transition.", "page": "/capability-consulting" })} ${renderComponent($$result, "PromiseCard", $$PromiseCard, { "title": "Our Promise", "content1": "Attain a granular, data-informed view of your SDV maturity", "content2": "Leverage data-driven insights to transform legacy operations into agile, software-centric ecosystems" })} </div> </div> <!-- Second Feature Section --> <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-stretch"> <!-- Mobile: Image first, Desktop: Image first --> <div class="w-full h-full order-1"> ${renderComponent($$result, "Image", $$Image, { "src": OUROFFERINGS2, "alt": "Capability Consulting", "class": "rounded-2xl w-full h-full object-cover min-h-[300px] lg:min-h-[500px]" })} </div> <div class="flex flex-col justify-between gap-8 order-2"> ${renderComponent($$result, "FeatureCard", $$FeatureCard, { "title": "Learning Experience Platform", "content": "Cultivating your next generation of SDV professionals, directly from Academia. Through collaboration with a diverse ecosystem of expert trainers and industry experts.", "page": "/learning-experience-platform" })} ${renderComponent($$result, "PromiseCard", $$PromiseCard, { "title": "Our Promise", "content1": "Role-based learning that equips learners with practical expertise for high-demand SDV roles.", "content2": "Industry experts, providing cutting-edge knowledge and real-world insights.", "content3": "Pool of Pre-vetted, SDV-ready talent for internships and future roles, simplifying the recruitment process" })} </div> </div> </section> ${renderComponent($$result, "TransformationMeans", $$TransformationMeans, {})} ${renderComponent($$result, "WhyChooseUs", $$WhyChooseUs, {})} <section class="px-4 sm:px-8 md:px-16 lg:px-44 xl:px-56 py-16 md:py-24 space-y-16"> <!-- Title --> <div class="text-center mb-8"> <span class="text-blue-600 font-medium block text-base sm:text-lg">
How to Contact Us
</span> <h2 class="text-[#002166] text-3xl sm:text-4xl md:text-5xl font-bold mt-2">
Your Path to Success is Set
</h2> </div> <!-- Mini Cards --> <div class="flex flex-col sm:flex-row justify-between gap-6 mb-6"> ${renderComponent($$result, "ContactUsMiniCards", $$ContactUsMiniCards, { "icon": CHATBUBBLE, "content": "Contact us via contact form" })} ${renderComponent($$result, "ContactUsMiniCards", $$ContactUsMiniCards, { "icon": ADSCLICK, "content": "Define your needs" })} ${renderComponent($$result, "ContactUsMiniCards", $$ContactUsMiniCards, { "icon": AUTOMATION, "content": "Implement the solution" })} </div> <!-- CTA Box --> <div class="relative bg-blue-600 rounded-2xl text-white px-6 sm:px-12 md:px-14 py-12 sm:py-20 overflow-hidden"> <div class="flex flex-col gap-4 relative z-10 max-w-xl"> <span class="text-2xl sm:text-3xl md:text-4xl font-semibold">
Get in touch with our experts
</span> <span class="text-sm sm:text-base md:text-lg font-light text-[#dce7ff]">
We can guide you to find the right solution for your needs
</span> <a href="/contact-us"> <button class="bg-white text-blue-600 w-fit px-6 py-2 rounded-full font-medium cursor-pointer hover:bg-gray-100 transition">
Talk To An Expert
</button> </a> </div> <!-- Background Logo --> ${renderComponent($$result, "Image", $$Image, { "src": LOGOMARK, "alt": "Logo Mark", "class": "absolute top-0 right-0 w-1/2 h-full opacity-90 mix-blend-overlay pointer-events-none object-cover" })} </div> </section> </main>`;
}, "C:/Users/GokulDS/Desktop/ssr/src/components/Welcome.astro", void 0);

const $$Astro = createAstro();
const $$Index = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, {}, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "Welcome", $$Welcome, {})} ` })}`;
}, "C:/Users/GokulDS/Desktop/ssr/src/pages/index.astro", void 0);

const $$file = "C:/Users/GokulDS/Desktop/ssr/src/pages/index.astro";
const $$url = "";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Index,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
